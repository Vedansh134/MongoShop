@Library('Shared') _

pipeline {
    agent any
    
    environment {
        // Define your environment variables here
        SONAR_HOME = tool "Sonar"
    }

    parameters {
        string(name: 'BACKEND_DOCKER_TAG', defaultValue: '', description: 'Setting docker image for latest push')
    }

    stages{
        stage("Validate Parameters"){
            steps {
                script {
                    if (params.BACKEND_DOCKER_TAG == '') {
                        error("BACKEND_DOCKER_TAG must be provided.")
                    }
                }
            }
        }
        stage("Workspace cleanup"){
            steps {
                script {
                    cleanWs()
                }
            }
        }
        stage('Git: Checkout Code'){
            steps {
                script {
                    code_checkout("https://gitlab.com/Vedansh134/mongoshop.git","staging")
                }
            }
        }
        stage("Trivy: Filesystem scan"){
            steps {
                script {
                    trivy_scan()
                }
            }
        }
        stage("SonarQube: Code Scan with SonarQube"){
            steps {
                script{
                    sonarqube_analysis("Sonar","mongoshop","mongoshop")
                }
            }
        }
        // stage("SonarQube: Code Quality Gates"){
        //     steps {
        //         script {
        //             sonarqube_code_quality()
        //         }
        //     }
        // }
        stage("Docker: Compose Up") {
            steps {
                script {
                    withEnv(["BACKEND_DOCKER_TAG=${params.BACKEND_DOCKER_TAG}"]) 
                    {
                        docker_compose()
                    }
                }
            }
        }
        stage("Docker: Push Image to Docker Hub"){
            steps {
                script {
                    docker_push("mongoshop","${params.BACKEND_DOCKER_TAG}","kvedansh786")
                }
            }
        }
        stage('Verify: Docker Image Tags') {
            steps {
                script{
                    echo "BACKEND_DOCKER_TAG: ${params.BACKEND_DOCKER_TAG}"
                }
            }
        }
        stage("Update: Kubernetes manifests"){
            steps{
                script{
                    dir('kubernetes'){
                        sh """
                            sed -i -e s/mongoshop.*/mongoshop:${params.BACKEND_DOCKER_TAG}/g backend.yaml
                        """
                    }
                }
            }
        }
        stage("Git: Code update and push to GitHub"){
            steps{
                script{
                    withCredentials([gitUsernamePassword(credentialsId: 'Gitlab-cred', gitToolName: 'Default')]) {
                        sh '''
                        echo "Checking repository status: "
                        git status
                    
                        echo "Adding changes to git: "
                        git add .
                        
                        echo "Commiting changes: "
                        git commit -m "Updated environment variables"
                        
                        echo "Pushing changes to gitLab: "
                        git push https://gitlab.com/Vedansh134/mongoshop.git staging
                    '''
                    }
                }
            }
        }
    }
  post {
      success {
            script {
                emailext attachLog: true,
                from: 'vedansh.kumar134@gmail.com',
                subject: "MongoShop Application has been updated and deployed - '${currentBuild.result}'",
                body: """
                    <html>
                    <body>
                        <div style="background-color: #FFA07A; padding: 10px; margin-bottom: 10px;">
                            <p style="color: black; font-weight: bold;">Project: ${env.JOB_NAME}</p>
                        </div>
                        <div style="background-color: #90EE90; padding: 10px; margin-bottom: 10px;">
                            <p style="color: black; font-weight: bold;">Build Number: ${env.BUILD_NUMBER}</p>
                        </div>
                        <div style="background-color: #87CEEB; padding: 10px; margin-bottom: 10px;">
                            <p style="color: black; font-weight: bold;">URL: ${env.BUILD_URL}</p>
                        </div>
                    </body>
                    </html>
            """,
            to: 'vedansh.kumar134@gmail.com',
            mimeType: 'text/html'
            }
        }
      failure {
            script {
                emailext attachLog: true,
                from: 'vedansh.kumar134@gmail.com',
                subject: "MongoShop Application build failed - '${currentBuild.result}'",
                body: """
                    <html>
                    <body>
                        <div style="background-color: #FFA07A; padding: 10px; margin-bottom: 10px;">
                            <p style="color: black; font-weight: bold;">Project: ${env.JOB_NAME}</p>
                        </div>
                        <div style="background-color: #90EE90; padding: 10px; margin-bottom: 10px;">
                            <p style="color: black; font-weight: bold;">Build Number: ${env.BUILD_NUMBER}</p>
                        </div>
                    </body>
                    </html>
            """,
            to: 'vedansh.kumar134@gmail.com',
            mimeType: 'text/html'
            }
        }
    }
}
